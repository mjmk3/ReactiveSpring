-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."ADDRESS"
(
    "ADDRESS_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "COUNTRY" character varying COLLATE pg_catalog."default" DEFAULT 'Canada'::character varying,
    "PROVINCE" character(2) COLLATE pg_catalog."default" DEFAULT 'AB'::bpchar,
    "CITY" character varying COLLATE pg_catalog."default",
    "STREET_NUMBER" character varying(8) COLLATE pg_catalog."default",
    "ADDRESS_LINE_ONE" character varying(80) COLLATE pg_catalog."default" NOT NULL,
    "ADDRESS_LINE_TWO" character varying(80) COLLATE pg_catalog."default",
    "POSTAL_CODE" character varying(6) COLLATE pg_catalog."default" NOT NULL,
    "UNIT_NUMBER" character varying(8) COLLATE pg_catalog."default",
    CONSTRAINT "ADDRESS_pkey" PRIMARY KEY ("ADDRESS_ID")
);

CREATE TABLE IF NOT EXISTS public."BRANCH"
(
    "BRANCH_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "BRANCH_LOCATION_ID" uuid,
    "BRANCH_PHONE" character(10) COLLATE pg_catalog."default",
    CONSTRAINT "BRANCH_pkey" PRIMARY KEY ("BRANCH_ID")
);

CREATE TABLE IF NOT EXISTS public."CATEGORY"
(
    "CATEGORY_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "CATEGORY_TITLE" character varying(40) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "CATEGORY_pkey" PRIMARY KEY ("CATEGORY_ID")
);

CREATE TABLE IF NOT EXISTS public."CREDIT_CARD"
(
    "CARD_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "CARD_NUMBER" character(16) COLLATE pg_catalog."default" NOT NULL,
    "HOLDER_NAME" character varying(40) COLLATE pg_catalog."default" NOT NULL,
    "EXPIRATION_DATE" date,
    "SECURITY_CODE" character(3) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "CREDIT_CARD_pkey" PRIMARY KEY ("CARD_ID")
);

CREATE TABLE IF NOT EXISTS public."CUSTOMER"
(
    "CUSTOMER_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "LAST_NAME" character varying(40) COLLATE pg_catalog."default" NOT NULL,
    "FIRST_NAME" character varying(40) COLLATE pg_catalog."default" NOT NULL,
    "MIDDLE_NAME" character varying(40) COLLATE pg_catalog."default",
    "COUNTRY_CODE" character varying(5) COLLATE pg_catalog."default" DEFAULT '1'::character varying,
    "PHONE_NUMBER" character(10) COLLATE pg_catalog."default" NOT NULL,
    "EMAIL" character varying(40) COLLATE pg_catalog."default",
    "PREFERRED_DELIVERY_METHOD_ID" uuid,
    "PREFERRED_BRANCH_ID" uuid,
    "ADDRESS_ID" uuid,
    "CUSTOMER_STATUS" character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "CUSTOMER_pkey" PRIMARY KEY ("CUSTOMER_ID")
);

CREATE TABLE IF NOT EXISTS public."DELIVERY"
(
    "DELIVERY_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "LOCATION_ID" uuid,
    "DELIVERY_METHOD_ID" uuid,
    "DELIVERY_ASSIGNEE" uuid,
    "DELIVERED_BY" uuid,
    CONSTRAINT "DELIVERY_pkey" PRIMARY KEY ("DELIVERY_ID")
);

CREATE TABLE IF NOT EXISTS public."DELIVERY_METHOD"
(
    "DELIVERY_METHOD_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "DELIVERY_METHOD_TITLE" character varying(40) COLLATE pg_catalog."default" NOT NULL,
    "DELIVERY_METHOD_DESCRIPTION" character varying(80) COLLATE pg_catalog."default",
    CONSTRAINT "DELIVERY_METHOD_pkey" PRIMARY KEY ("DELIVERY_METHOD_ID")
);

CREATE TABLE IF NOT EXISTS public."DRIVER"
(
    "DRIVER_ID" uuid NOT NULL,
    "IS_AVAILABLE" boolean DEFAULT true,
    "DAILY_CAPACITY" smallint NOT NULL,
    "DELIVERED_ORDERS" smallint NOT NULL,
    "EMPLOYEE_DRIVER_ID" uuid,
    "DELIVERED_TIME" timestamp with time zone,
    CONSTRAINT "DIRVER_pkey" PRIMARY KEY ("DRIVER_ID")
);

CREATE TABLE IF NOT EXISTS public."EMPLOYEE"
(
    "EMPLOYEE_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "EMPLOYEE_LAST_NAME" character varying(40) COLLATE pg_catalog."default" NOT NULL,
    "EMPLOYEE_FIRST_NAME" character varying(40) COLLATE pg_catalog."default" NOT NULL,
    "EMPLOYEE_MIDDLE_NAME" character varying(40) COLLATE pg_catalog."default",
    "COUNTRY_CODE" character varying(5) COLLATE pg_catalog."default" DEFAULT '1'::character varying,
    "EMPLYEE_PHONE_NUMBER" character(10) COLLATE pg_catalog."default" NOT NULL,
    "EMPLOYEE_JOB_CATEGORY" uuid,
    CONSTRAINT "EMPLOYEE_pkey" PRIMARY KEY ("EMPLOYEE_ID")
);

CREATE TABLE IF NOT EXISTS public."GIFT_CARD"
(
    "GIFT_CARD_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "GIFT_CARD_NUMBER" character(16) COLLATE pg_catalog."default",
    "REMAIN_BALANCE" money DEFAULT 0.00,
    CONSTRAINT "GIFT_CARD_pkey" PRIMARY KEY ("GIFT_CARD_ID")
);

CREATE TABLE IF NOT EXISTS public."JOB_CATEGORY"
(
    "JOB_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "JOB_TITLE" character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "JOB_CATEGORY_pkey" PRIMARY KEY ("JOB_ID")
);

CREATE TABLE IF NOT EXISTS public."ORDER"
(
    "ORDER_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "ORDER_TIME" time with time zone DEFAULT now(),
    "CURRENCY_CODE" character(3) COLLATE pg_catalog."default" DEFAULT 'CAD'::bpchar,
    "SUB_TOTAL" numeric,
    "GST_AMOUNT" numeric DEFAULT 0.00,
    "DISCOUNT_AMOUNT" numeric DEFAULT 0.00,
    "TOTAL_AMOUNT" numeric NOT NULL,
    "DELIVERY_TIME" time with time zone,
    "DELIVERY_ID" uuid,
    "CUSTOMER_ID" uuid,
    "PAYMENT_ID" uuid,
    CONSTRAINT "INVOICE_pkey" PRIMARY KEY ("ORDER_ID")
);

CREATE TABLE IF NOT EXISTS public."ORDER_ITEM"
(
    "ORDER_ID" uuid NOT NULL,
    "PRODUCT_ID" uuid NOT NULL,
    "ORDER_ITEM_ID" uuid NOT NULL,
    CONSTRAINT "INVOICE_ITEM_pkey" PRIMARY KEY ("ORDER_ID", "PRODUCT_ID")
);

CREATE TABLE IF NOT EXISTS public."PAYMENT"
(
    "PAYMENT_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "PAYMENT_AMOUNT" numeric NOT NULL,
    "PAYMENT_CURRENCY" character(3) COLLATE pg_catalog."default" DEFAULT 'CAD'::bpchar,
    "AMOUNT_LOCAL_CURRENCY" numeric,
    "CARD_ID" uuid NOT NULL,
    CONSTRAINT "PAYMENT_pkey" PRIMARY KEY ("PAYMENT_ID")
);

CREATE TABLE IF NOT EXISTS public."PRODUCT"
(
    "PRODUCT_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "PRODUCT_NAME" character varying(40) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PRODUCT_pkey" PRIMARY KEY ("PRODUCT_ID")
);

CREATE TABLE IF NOT EXISTS public."PRODUCT_CATEGORY"
(
    "PRODUCT_ID" uuid NOT NULL,
    "CATEGORY_ID" uuid NOT NULL,
    CONSTRAINT "PRODUCT_CATEGORY_pkey" PRIMARY KEY ("PRODUCT_ID", "CATEGORY_ID")
);

CREATE TABLE IF NOT EXISTS public."STOCK"
(
    "STOCK_ID" uuid NOT NULL DEFAULT gen_random_uuid(),
    "PRODUCT_VALID_QUANTITY" smallint NOT NULL,
    "BRANCH_ID" uuid,
    "PRODUCT_ID" uuid,
    CONSTRAINT "STOCK_pkey" PRIMARY KEY ("STOCK_ID"),
    CONSTRAINT "PRODUCT_IN_BRNCH" UNIQUE ("BRANCH_ID", "PRODUCT_ID")
);

ALTER TABLE IF EXISTS public."BRANCH"
    ADD CONSTRAINT "BRANCH_LOCATION_FK" FOREIGN KEY ("BRANCH_LOCATION_ID")
    REFERENCES public."ADDRESS" ("ADDRESS_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."CUSTOMER"
    ADD CONSTRAINT "CUSTOMER_ADDRESS_FK" FOREIGN KEY ("ADDRESS_ID")
    REFERENCES public."ADDRESS" ("ADDRESS_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."CUSTOMER"
    ADD CONSTRAINT "PREFERRED_DERIVERY_METHOD_FK" FOREIGN KEY ("PREFERRED_DELIVERY_METHOD_ID")
    REFERENCES public."DELIVERY_METHOD" ("DELIVERY_METHOD_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."DELIVERY"
    ADD CONSTRAINT "DELIVERED_BY_FK" FOREIGN KEY ("DELIVERED_BY")
    REFERENCES public."DRIVER" ("DRIVER_ID") MATCH SIMPLE
    ON UPDATE SET NULL
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public."DELIVERY"
    ADD CONSTRAINT "DELIVERY_ASSIGNEE_FK" FOREIGN KEY ("DELIVERY_ASSIGNEE")
    REFERENCES public."EMPLOYEE" ("EMPLOYEE_ID") MATCH SIMPLE
    ON UPDATE SET NULL
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public."DELIVERY"
    ADD CONSTRAINT "DELIVERY_LOCATION_FK" FOREIGN KEY ("LOCATION_ID")
    REFERENCES public."ADDRESS" ("ADDRESS_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."DELIVERY"
    ADD CONSTRAINT "DELIVERY_METHOD_FK" FOREIGN KEY ("DELIVERY_METHOD_ID")
    REFERENCES public."DELIVERY_METHOD" ("DELIVERY_METHOD_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."DRIVER"
    ADD CONSTRAINT "EMPLOYEE_DRIVER_FK" FOREIGN KEY ("EMPLOYEE_DRIVER_ID")
    REFERENCES public."EMPLOYEE" ("EMPLOYEE_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."EMPLOYEE"
    ADD CONSTRAINT "Employee_job_Category_FK" FOREIGN KEY ("EMPLOYEE_JOB_CATEGORY")
    REFERENCES public."JOB_CATEGORY" ("JOB_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."ORDER"
    ADD CONSTRAINT "INVOICE_CUSTOMER_FK" FOREIGN KEY ("CUSTOMER_ID")
    REFERENCES public."CUSTOMER" ("CUSTOMER_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."ORDER"
    ADD CONSTRAINT "INVOICE_DELIVERY_FK" FOREIGN KEY ("DELIVERY_ID")
    REFERENCES public."DRIVER" ("DRIVER_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."ORDER"
    ADD CONSTRAINT "INVOICE_PAYMENT_FK" FOREIGN KEY ("PAYMENT_ID")
    REFERENCES public."PAYMENT" ("PAYMENT_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."ORDER_ITEM"
    ADD CONSTRAINT "INVOICE_FK" FOREIGN KEY ("ORDER_ID")
    REFERENCES public."ORDER" ("ORDER_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."ORDER_ITEM"
    ADD CONSTRAINT "PRODUCT_FK" FOREIGN KEY ("PRODUCT_ID")
    REFERENCES public."PRODUCT" ("PRODUCT_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."PAYMENT"
    ADD CONSTRAINT "CARD_ID_CREDIY" FOREIGN KEY ("CARD_ID")
    REFERENCES public."CREDIT_CARD" ("CARD_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."PAYMENT"
    ADD CONSTRAINT "CARD_ID_gift" FOREIGN KEY ("CARD_ID")
    REFERENCES public."GIFT_CARD" ("GIFT_CARD_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."PRODUCT_CATEGORY"
    ADD CONSTRAINT "CATEGORY_FK" FOREIGN KEY ("CATEGORY_ID")
    REFERENCES public."CATEGORY" ("CATEGORY_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."PRODUCT_CATEGORY"
    ADD CONSTRAINT "PRODUCT_FK" FOREIGN KEY ("PRODUCT_ID")
    REFERENCES public."PRODUCT" ("PRODUCT_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."STOCK"
    ADD CONSTRAINT "STOCK_BRANCH_FK" FOREIGN KEY ("BRANCH_ID")
    REFERENCES public."BRANCH" ("BRANCH_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."STOCK"
    ADD CONSTRAINT "STOCK_PRODUCT_FK" FOREIGN KEY ("PRODUCT_ID")
    REFERENCES public."PRODUCT" ("PRODUCT_ID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;

END;